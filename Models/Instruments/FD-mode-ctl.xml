<PropertyList>

  <path>FDAP.ac</path>

  <effect>
    <condition>
      <greater-than>
	<property>sim/version/flightgear</property>
	<value>3.4.999</value>
      </greater-than>
    </condition>
    <inherits-from>Models/Effects/interior-shadow/citationII-interior-flightdeck</inherits-from>
    <object-name>AP-FD</object-name>
    <object-name>AP.alt</object-name>
    <object-name>AP.alt.lit</object-name>
    <object-name>AP.altsel</object-name>
    <object-name>AP.altsel.cap</object-name>
    <object-name>AP.altsel.hld</object-name>
    <object-name>AP.apr</object-name>
    <object-name>AP.apr.lit</object-name>
    <object-name>AP.bc</object-name>
    <object-name>AP.bc.lit</object-name>
    <object-name>AP.fdoff</object-name>
    <object-name>AP.fdoff.lit</object-name>
    <object-name>AP.hdg</object-name>
    <object-name>AP.hdg.lit</object-name>
    <object-name>AP.ias</object-name>
    <object-name>AP.ias.cap</object-name>
    <object-name>AP.ias.hld</object-name>
    <object-name>AP.knob</object-name>
    <object-name>AP.nav</object-name>
    <object-name>AP.nav-hsi</object-name>
    <object-name>AP.nav.lit</object-name>
    <object-name>AP.nav1.lit</object-name>
    <object-name>AP.nav2.lit</object-name>
    <object-name>AP.vnav</object-name>
    <object-name>AP.vnav.lit</object-name>
    <object-name>AP.vs</object-name>
    <object-name>AP.vs.lit</object-name>
  </effect>

  <animation>
    <type>select</type>
    <object-name>AP.fdoff.lit</object-name>
    <condition>
      <property>autopilot/locks/passive-mode</property>
      <greater-than>
        <property>systems/electrical/ac-volts</property>
        <value>90</value>
      </greater-than>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.hdg.lit</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/heading</property>
        <value>dg-heading-hold</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.nav.lit</object-name>
    <condition>
      <or>
        <equals>
          <property>autopilot/locks/heading</property>
          <value>nav1-hold</value>
        </equals>
        <equals>
          <property>autopilot/locks/heading</property>
          <value>nav2-hold</value>
        </equals>
        <equals>
          <property>autopilot/locks/heading</property>
          <value>true-heading-hold</value>
        </equals>
      </or>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.apr.lit</object-name>
    <condition>
      <or>
        <equals>
          <property>autopilot/locks/altitude</property>
          <value>gs1-hold</value>
        </equals>
        <property>autopilot/settings/gs1-arm</property>
      </or>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.bc.lit</object-name>
    <condition>
      <property>instrumentation/nav/back-course-btn</property>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.nav1.lit</object-name>
    <condition>
      <and>
        <equals>
          <property alias="../../../../../selected-nav"/>
          <value>0</value>
        </equals>
        <greater-than>
          <property>systems/electrical/ac-volts</property>
          <value>90</value>
        </greater-than>
      </and>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.nav2.lit</object-name>
    <condition>
      <and>
        <equals>
          <property alias="../../../../../selected-nav"/>
          <value>1</value>
        </equals>
        <greater-than>
          <property>systems/electrical/ac-volts</property>
          <value>90</value>
        </greater-than>
      </and>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.alt.lit</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/altitude</property>
        <value>altitude-hold</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.altsel.cap</object-name>
    <condition>
      <and>
        <equals>
          <property>autopilot/locks/altitude</property>
          <value>altitude-hold</value>
        </equals>
        <greater-than-equals>
          <expression>
            <abs>
              <difference>
                <property>autopilot/settings/target-altitude-ft</property>
                <property>instrumentation/altimeter/indicated-altitude-ft</property>
              </difference>
            </abs>
          </expression>
          <value type="double">100.0</value>
        </greater-than-equals>
      </and>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.altsel.hld</object-name>
    <condition>
      <and>
        <equals>
          <property>autopilot/locks/altitude</property>
          <value>altitude-hold</value>
        </equals>
        <less-than-equals>
          <expression>
            <abs>
              <difference>
                <property>autopilot/settings/target-altitude-ft</property>
                <property>instrumentation/altimeter/indicated-altitude-ft</property>
              </difference>
            </abs>
          </expression>
          <value type="double">100.0</value>
        </less-than-equals>
      </and>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.vnav.lit</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/altitude</property>
        <value>vnav</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.vs.lit</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/altitude</property>
        <value>vertical-speed-hold</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.ias.cap</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/speed</property>
        <value>speed-with-throttle</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>AP.ias.hld</object-name>
    <condition>
      <equals>
        <property>autopilot/locks/speed</property>
        <value>speed-with-throttle</value>
      </equals>
    </condition>
  </animation>

  <!-- hotspots -->

  <animation>
    <type>pick</type>
    <object-name>AP.hdg</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>nasal</command>
        <script>
          if (getprop ("autopilot/locks/heading") == "dg-heading-hold")
            setprop ("autopilot/locks/heading", "wing-leveler");
          else setprop ("autopilot/locks/heading", "dg-heading-hold");
          setprop ("autopilot/settings/gs1-arm", 0);
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-hdg</tooltip-id>
        <label>A/P: heading mode: %s</label>
        <property>autopilot/locks/heading</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.nav</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>nasal</command>
        <!-- State transitions: NAV to GPS to wing leveler to NAV selected by
             the pilot's HSI; heading hold to NAV selected by the pilot's HSI
             -->
        <script>
          var current_value = getprop ("autopilot/locks/heading");
          if (current_value == "nav1-hold"
           or current_value == "nav2-hold") {
            setprop ("/autopilot/locks/heading", "true-heading-hold");
          }
          elsif (current_value == "true-heading-hold") {
            setprop ("/autopilot/locks/heading", "wing-leveler");
          }
          elsif (current_value == "dg-heading-hold" or
                 current_value == "wing-leveler") {
            var selected_nav = getprop ("/instrumentation/hsi[0]/selected-nav");
            setprop ("/autopilot/locks/heading", "nav" ~ (selected_nav + 1) ~ "-hold");
          }
          setprop ("autopilot/settings/gs1-arm", 0);
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-nav</tooltip-id>
        <label>A/P: NAV mode: %s</label>
        <property>autopilot/locks/heading</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.apr</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>nasal</command>
        <script>
          if (getprop ("autopilot/locks/altitude") == "gs1-hold") {
            setprop("autopilot/locks/heading","wing-leveler");
            setprop("autopilot/locks/altitude","pitch-hold");
            setprop("autopilot/locks/approach-mode", "Locator/Glideslope hold");
          }
          else {
            setprop("autopilot/locks/heading","nav1-hold");
            if (getprop ("instrumentation/nav[0]/gs-in-range")) {
              setprop("autopilot/locks/altitude", "gs1-hold");
              setprop("autopilot/settings/gs1-arm", 0);
              setprop("autopilot/locks/approach-mode", "Locator/Glideslope stand-by");
            }
            else {
              setprop("autopilot/locks/altitude", "altitude-hold");
              setprop("autopilot/settings/gs1-arm", 1);
              setprop("autopilot/locks/approach-mode", "Locator/Glideslope armed");
            }
          }
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-appr</tooltip-id>
        <label>A/P: Approach mode: %s</label>
        <property>autopilot/locks/approach-mode</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.bc</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-toggle</command>
        <property>instrumentation/nav/back-course-btn</property>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-bc</tooltip-id>
        <label>A/P: Back course: %s</label>
        <mapping>on-off</mapping>
        <property>instrumentation/nav/back-course-btn</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.nav-hsi</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-toggle</command>
        <property alias="../../../../selected-nav"/>
        <!-- This triggers a Nasal listener in citation2.nas to drive the HSI
             from the selected nav radio. -->
      </binding>
      <binding>
        <command>nasal</command>
        <!--
            If autopilot is engaged in NAV mode, set it to follow the VOR beacon
            selected on the pilot's HSI, in case it has just changed.  If this
            script is triggered by toggling the copilot's HSI, it has no effect
            since the pilot's selected nav has not changed.
        -->
        <script>
          var current_mode = getprop ("/autopilot/locks/heading");
          if (current_mode == "nav1-hold"
           or current_mode == "nav2-hold") {
             var selected = getprop ("/instrumentation/hsi[0]/selected-nav");
             if (selected == 0) {
               setprop ("/autopilot/locks/heading", "nav1-hold");
             }
             elsif (selected == 1) {
               setprop ("/autopilot/locks/heading", "nav2-hold");
             }
          }
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-nav-hsi</tooltip-id>
        <label>A/P: NAV HSI: %s</label>
        <property>autopilot/locks/heading</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.alt</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>nasal</command>
        <script>
          if (getprop ("autopilot/locks/altitude") == "altitude-hold")
            setprop ("autopilot/locks/altitude", "pitch-hold");
          else setprop ("autopilot/locks/altitude", "altitude-hold");
          setprop ("autopilot/settings/gs1-arm", 0);
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-alt</tooltip-id>
        <label>A/P: Altitude mode: %s</label>
        <property>autopilot/locks/altitude</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.vs</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>nasal</command>
        <script>
          if (getprop ("autopilot/locks/altitude") == "vertical-speed-hold")
            setprop ("autopilot/locks/altitude", "pitch-hold");
          else setprop ("autopilot/locks/altitude", "vertical-speed-hold");
          setprop ("autopilot/settings/gs1-arm", 0);
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-vs</tooltip-id>
        <label>A/P: Vertical speed mode: %s</label>
        <property>autopilot/locks/altitude</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.ias</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-cycle</command>
        <property>autopilot/locks/speed</property>
        <value type="string">speed-with-throttle</value>
        <!-- value type="string">speed-with-pitch-trim</value--> <!-- not supported -->
        <value type="string"/>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property type="bool">autopilot/locks/autothrottle</property>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-ias</tooltip-id>
        <label>A/P: Autothrottle: %s</label>
        <property>autopilot/locks/speed</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>AP.fdoff</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-toggle</command>
        <property>autopilot/locks/passive-mode</property>
      </binding>
      <binding>
        <command>property-set</command>
        <property>autopilot/settings/gs1-arm</property>
        <value>0</value>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>AP-fdoff</tooltip-id>
        <label>A/P: Flight director: %s</label>
        <mapping>on-off</mapping>
        <property>autopilot/locks/passive-mode</property>
      </binding>
    </hovered>
  </animation>

</PropertyList>
