<?xml version='1.0' encoding='UTF-8'?>
<PropertyList>

  <path>rmi.ac</path>

  <animation>
    <type>select</type>
    <object-name>RMI.flag</object-name>
    <condition>
      <not><property>systems/electrical/outputs/main-left-xover/dc-rmi1</property></not>
    </condition>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>RMI.compass</object-name>
    <property>instrumentation/rmi/heading-deg</property>
    <axis>
      <x>1.0</x>
      <y>0.0</y>
      <z>0.0</z>
    </axis>
  </animation>

<!-- Left button and single-stemmed needle -->
  <animation>
    <type>pick</type>
    <object-name>RMI.left_button</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-cycle</command>
        <property>instrumentation/rmi/single-needle/selected-input</property>
        <value>ADF</value>
        <value>VOR</value>
      </binding>
      <binding>
        <command>property-assign</command>
        <property>instrumentation/rmi/single-needle/receive</property>
        <value>0.0</value>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var selected_input = getprop ("/instrumentation/rmi/single-needle/selected-input");
          var dest_node = props.globals.getNode ("/instrumentation/rmi/single-needle/in-range", 1);
          dest_node.unalias ();
          if (selected_input == "ADF") {
            var source_node = props.globals.getNode ("/instrumentation/adf/in-range");
            dest_node.alias (source_node);
          }
          elsif (selected_input == "VOR") {
            var source_node = props.globals.getNode ("/instrumentation/nav[0]/in-range");
            dest_node.alias (source_node);
          }
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>rmi-left-button</tooltip-id>
        <label>Radio magnetic indicator 1 source: %s</label>
        <property>instrumentation/rmi/single-needle/selected-input</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>RMI.single_needle</object-name>
    <property>instrumentation/rmi/single-needle/position-deg</property>
    <axis>
      <x>-1.0</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

  <animation>
    <type>select</type>
    <object-name>RMI.SingleArrow.SelectionIndicator.ADF</object-name>
    <condition>
      <equals>
        <property>instrumentation/rmi/single-needle/selected-input</property>
        <value>ADF</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>RMI.SingleArrow.SelectionIndicator.VOR</object-name>
    <condition>
      <equals>
        <property>instrumentation/rmi/single-needle/selected-input</property>
        <value>VOR</value>
      </equals>
    </condition>
  </animation>

<!-- Right button and double-stemmed needle -->
  <animation>
    <type>pick</type>
    <object-name>RMI.right_button</object-name>
    <action>
      <button>0</button>
      <binding>
        <command>property-cycle</command>
        <property>instrumentation/rmi/double-needle/selected-input</property>
        <value>ADF</value>
        <value>VOR</value>
      </binding>
      <binding>
        <command>property-assign</command>
        <property>instrumentation/rmi/double-needle/receive</property>
        <value>0.0</value>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var selected_input = getprop ("/instrumentation/rmi/double-needle/selected-input");
          var dest_node = props.globals.getNode ("/instrumentation/rmi/double-needle/in-range", 1);
          dest_node.unalias ();
          if (selected_input == "ADF") {
            var source_node = props.globals.getNode ("/instrumentation/adf/in-range");
            dest_node.alias (source_node);
          }
          elsif (selected_input == "VOR") {
            var source_node = props.globals.getNode ("/instrumentation/nav[1]/in-range");
            dest_node.alias (source_node);
          }
        </script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>rmi-right-button</tooltip-id>
        <label>Radio magnetic indicator 2 source: %s</label>
        <property>instrumentation/rmi/double-needle/selected-input</property>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>RMI.double_needle</object-name>
    <property>instrumentation/rmi/double-needle/position-deg</property>
    <axis>
      <x>-1.0</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

  <animation>
    <type>select</type>
    <object-name>RMI.DoubleArrow.SelectionIndicator.ADF</object-name>
    <condition>
      <equals>
        <property>instrumentation/rmi/double-needle/selected-input</property>
        <value>ADF</value>
      </equals>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>RMI.DoubleArrow.SelectionIndicator.VOR</object-name>
    <condition>
      <equals>
        <property>instrumentation/rmi/double-needle/selected-input</property>
        <value>VOR</value>
      </equals>
    </condition>
  </animation>

<!-- Panel Lights (only with Rembrandt disabled) -->
  <animation>
    <type>material</type>
    <condition>
      <not>
        <property>sim/rendering/rembrandt/enabled</property>
      </not>
    </condition>
    <object-name>RMI.bezel</object-name>
    <object-name>RMI.left_button</object-name>
    <object-name>RMI.right_button</object-name>
    <emission>
      <red>1.0</red>
      <green>0.8</green>
      <blue>0.6</blue>
      <factor-prop>controls/lighting/panel-average-lighting</factor-prop>
    </emission>
  </animation>

<!-- Instrument Lights -->
<!-- Implement emis animation even for Rembrandt rendering! -->
  <animation>
    <type>material</type>
    <object-name>RMI.DoubleArrow.SelectionIndicator.ADF</object-name>
    <object-name>RMI.DoubleArrow.SelectionIndicator.VOR</object-name>
    <object-name>RMI.SingleArrow.SelectionIndicator.ADF</object-name>
    <object-name>RMI.SingleArrow.SelectionIndicator.VOR</object-name>
    <object-name>RMI.compass</object-name>
    <object-name>RMI.face</object-name>
    <object-name>RMI.flag</object-name>
    <object-name>RMI.single_needle</object-name>
    <object-name>RMI.double_needle</object-name>
    <emission>
      <red>1</red>
      <green>0.8</green>
      <blue>0.6</blue>
      <factor-prop>controls/lighting/flightdeck-average-instrument-emission</factor-prop>
    </emission>
  </animation>

  <effect>
    <condition>
      <greater-than>
        <property>sim/version/flightgear</property>
        <value>3.4.999</value>
      </greater-than>
    </condition>
    <inherits-from>Aircraft/Citation/Models/Effects/interior-shadow/citationII-interior-flightdeck</inherits-from>
    <object-name>RMI.DoubleArrow.SelectionIndicator.ADF</object-name>
    <object-name>RMI.DoubleArrow.SelectionIndicator.VOR</object-name>
    <object-name>RMI.SingleArrow.SelectionIndicator.ADF</object-name>
    <object-name>RMI.SingleArrow.SelectionIndicator.VOR</object-name>
    <object-name>RMI.bezel</object-name>
    <object-name>RMI.compass</object-name>
    <object-name>RMI.face</object-name>
    <object-name>RMI.flag</object-name>
    <object-name>RMI.left_button</object-name>
    <object-name>RMI.right_button</object-name>
    <object-name>RMI.double_needle</object-name>
    <object-name>RMI.single_needle</object-name>
  </effect>

  <effect>
    <inherits-from>Effects/model-transparent</inherits-from>
    <object-name>RMI.glass</object-name>
  </effect>

</PropertyList>
